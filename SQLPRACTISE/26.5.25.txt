package crud_operation;

import java.sql.connection;
import java.sql.preparedstatement;
import java.sql.resultset;
import java.util.scanner;

import com.mysql.cj.jdbc.result.resultsetmetadata;

public class crud_operation {

    public static void main(string[] args) {
        crud_operation objtest = new crud_operation();
        scanner sc = new scanner(system.in);
        system.out.println("enter the number of students to insert: ");
        int n = sc.nextint();
        for (int i = 0; i < n; i++) {
            system.out.print("enter student sl no: ");
            int sl_no = sc.nextint();
            sc.nextline();
            system.out.print("enter the student's name: ");
            string name = sc.nextline();
            objtest.create_data(sl_no, name);
        }
        objtest.read_data();
        objtest.read_data_with_condition();
        objtest.update_data(104, 113, "suyash kadam");
        objtest.read_data();
        objtest.alter_table();
        objtest.describe_table();
        system.out.println("enter the record's student_id to delete: ");
        int s_id = sc.nextint();
        sc.nextline();
        objtest.delete_data(s_id);
        sc.close();
    }

    public void create_data(int sl_no, string name) {
        db_connection obj_db_connection = new db_connection();
        connection connection = obj_db_connection.get_connection();
        preparedstatement ps = null;
        try {
            string query = "insert into student values (?,?)";
            ps = connection.preparestatement(query);
            ps.setint(1, sl_no);
            ps.setstring(2, name);
            system.out.println(ps);
            ps.executeupdate();
        } catch (exception e) {
            system.out.println(e);
        }
    }

    public void read_data() {
        db_connection obj_db_connection = new db_connection();
        connection connection = obj_db_connection.get_connection();
        preparedstatement ps = null;
        resultset rs = null;

        try {
            string query = "select * from student";
            ps = connection.preparestatement(query);
            rs = ps.executequery();

            resultsetmetadata metadata = (resultsetmetadata) rs.getmetadata();
            int columncount = metadata.getcolumncount();

            system.out.println("student table data:");
            while (rs.next()) {
                for (int i = 1; i <= columncount; i++) {
                    object value = rs.getobject(i);
                    system.out.print(value + "\t");
                }
                system.out.println();
            }
        } catch (exception e) {
            system.out.println("error: " + e);
        }
    }

    public void read_data_with_condition() {
        db_connection obj_db_connection = new db_connection();
        connection connection = obj_db_connection.get_connection();
        preparedstatement ps = null;
        resultset rs = null;
        scanner sc = new scanner(system.in);

        try {
            system.out.print("enter sl_no to search: ");
            int sl_no = sc.nextint();

            string query = "select * from student where s_id = ?";
            ps = connection.preparestatement(query);
            ps.setint(1, sl_no);

            rs = ps.executequery();

            resultsetmetadata metadata = (resultsetmetadata) rs.getmetadata();
            int columncount = metadata.getcolumncount();

            system.out.println("\nsearch result:");
            boolean found = false;
            while (rs.next()) {
                found = true;
                for (int i = 1; i <= columncount; i++) {
                    object value = rs.getobject(i);
                    system.out.print(value + "\t");
                }
                system.out.println();
            }

            if (!found) {
                system.out.println("no record found with sl_no: " + sl_no);
            }

        } catch (exception e) {
            system.out.println("error: " + e);
        }
    }

    public void update_data(int sl_no, int new_sl_no, string name) {
        db_connection obj_db_connection = new db_connection();
        connection connection = obj_db_connection.get_connection();
        preparedstatement ps = null;
        try {
            string query = "update student set s_id =?, s_name =? where s_id =?";
            ps = connection.preparestatement(query);
            ps.setint(1, new_sl_no);
            ps.setstring(2, name);
            ps.setint(3, sl_no);
            system.out.println(ps);
            ps.executeupdate();
        } catch (exception e) {
            system.out.println(e);
        }
    }

    public void alter_table() {
        db_connection obj_db_connection = new db_connection();
        connection connection = obj_db_connection.get_connection();
        preparedstatement ps = null;

        try {
            string query = "alter table student add age int";
            ps = connection.preparestatement(query);
            ps.executeupdate();
            system.out.println("column 'age' added successfully to student table.");
        } catch (exception e) {
            system.out.println("error (maybe column already exists): " + e);
        }
    }

    public void describe_table() {
        db_connection obj_db_connection = new db_connection();
        connection connection = obj_db_connection.get_connection();
        preparedstatement ps = null;
        resultset rs = null;

        try {
            string query = "describe student";
            ps = connection.preparestatement(query);
            rs = ps.executequery();

            system.out.println("\ntable structure (describe student):");
            system.out.println("field\ttype\tnull\tkey\tdefault\textra");
            while (rs.next()) {
                for (int i = 1; i <= 6; i++) {
                    object value = rs.getobject(i);
                    system.out.print(value + "\t");
                }
                system.out.println();
            }
        } catch (exception e) {
            system.out.println("error describing table: " + e);
        }
    }

    public void delete_data(int s_id) {
        db_connection obj_db_connection = new db_connection();
        connection connection = obj_db_connection.get_connection();
        preparedstatement ps = null;
        try {
            string query = "delete from student where s_id=?";
            ps = connection.preparestatement(query);
            ps.setint(1, s_id);
            system.out.println(ps);
            ps.executeupdate();
        } catch (exception e) {
            system.out.println(e);
        }
    }
}
